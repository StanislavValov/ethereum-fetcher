package com.limechain.etherium.domain.entity;

import jakarta.persistence.*;
import lombok.*;

import java.math.BigInteger;
import java.util.UUID;

@Entity
@Table(name = "eth_transactions", schema = "public")
@Getter
@Setter
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class EthTransactionEntity {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private UUID id;
    @Column
    private String transactionHash; // Hex encoded transaction hash
    @Column
    private int transactionStatus;  // Status of the transaction (1 for success, 0 for failure)
    @Column
    private String blockHash;       // Hex encoding of the block hash
    @Column
    private BigInteger blockNumber;       // Block number
    @Column
    private String fromAddress;            // Ethereum address of the sender
    @Column
    private String toAddress;              // Ethereum address of the receiver (nullable)
    @Column
    private String contractAddress; // Ethereum address of the created contract (nullable)
    @Column
    private int logsCount;          // Number of logs generated by the transaction
    @Column
    private String input;           // Hex encoded data sent along with the transaction
    @Column
    private String value;           // Value transferred in wei
}